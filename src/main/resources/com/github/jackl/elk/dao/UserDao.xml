<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.jackl.elk.dao.UserDao">
	<resultMap id="objResultMap" type="com.github.jackl.elk.entity.UserEntity">
		<id property="userId" column="user_id" />
		<result property="username" column="username"/>
		<result property="password" column="password" />
		<result property="email" column="email"/>
		<result property="mobile" column="mobile"/>
		<result property="applicationId" column="application_id"/>
		<result property="status" column="status"/>
		<result property="createTime" column="create_time"/>
	</resultMap>

	<select id="queryObject" resultType="com.github.jackl.elk.entity.UserEntity">
		select * from t_user where user_id = #{value}
	</select>

	<select id="queryList" resultType="com.github.jackl.elk.entity.UserEntity">
		select * from t_user
		<if test="username != null and username.trim() != ''">
			where username like concat('%', #{username}, '%')
		</if>
		 order by user_id desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from t_user
	</select>
	
	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="String">
		select m.perms from t_user_role ur
			LEFT JOIN t_role_menu rm on ur.role_id = rm.role_id
			LEFT JOIN t_menu m on rm.menu_id = m.menu_id
		where ur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有菜单ID --> 
	<select id="queryAllMenuId" resultType="Long">
		select m.menu_id from t_user_role ur
			LEFT JOIN t_role_menu rm on ur.role_id = rm.role_id
			LEFT JOIN t_menu m on rm.menu_id = m.menu_id
		where ur.user_id = #{userId}
	</select>
	
	<select id="queryByUserName" resultType="com.github.jackl.elk.entity.UserEntity">
		select * from t_user where username = #{username}
	</select>
	
	<insert id="save" parameterType="com.github.jackl.elk.entity.UserEntity" useGeneratedKeys="true" keyProperty="userId">
		insert into t_user
		(
			`user_id`, 
			`username`, 
			`password`, 
			`email`, 
			`mobile`, 
			`status`, 
			`create_time`,
			`application_id`
		)
		values
		(
			#{userId}, 
			#{username}, 
			#{password}, 
			#{email}, 
			#{mobile}, 
			#{status}, 
			#{createTime},
			#{applicationId}
		)
	</insert>
	 
	<update id="update" parameterType="com.github.jackl.elk.entity.UserEntity">
		update t_user
		<set> 
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="applicationId != null">`application_id` = #{applicationId}, </if>
		</set>
		where user_id = #{userId}
	</update>
	
	<update id="updatePassword" parameterType="map">
		update t_user set `password` = #{newPassword}
			where user_id = #{userId} and password = #{password}
	</update>
	
	<delete id="deleteBatch">
		delete from t_user where user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
		;
		delete from t_user_role where user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

</mapper>